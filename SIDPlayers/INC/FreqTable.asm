//; =============================================================================
//; DATA SECTION - Lookup Tables
//; =============================================================================

frequencyToBarHi:
.byte $00, $02, $06, $08, $0A, $0C, $0D, $0E, $0F, $0F, $10, $11, $12, $12, $12, $13 // 00-0F
.byte $14, $14, $14, $14, $15, $15, $16, $16, $16, $17, $17, $17, $17, $18, $18, $18 // 10-1F
.byte $18, $19, $19, $19, $19, $19, $19, $1A, $1A, $1A, $1A, $1A, $1B, $1B, $1B, $1B // 20-2F
.byte $1B, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1C, $1D, $1D, $1D, $1D, $1D // 30-3F
.byte $1D, $1D, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1E, $1F, $1F // 40-4F
.byte $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $20, $20, $20, $20, $20, $20, $20, $20 // 50-5F
.byte $20, $20, $21, $21, $21, $21, $21, $21, $21, $21, $21, $21, $21, $21, $21, $21 // 60-6F
.byte $21, $21, $21, $21, $21, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22, $22 // 70-7F
.byte $22, $22, $22, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23 // 80-8F
.byte $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $23, $24, $24, $24, $24 // 90-9F
.byte $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $24, $25 // A0-AF
.byte $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25, $25 // B0-BF
.byte $25, $25, $25, $25, $25, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26 // C0-CF
.byte $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $26 // D0-DF
.byte $26, $26, $26, $26, $26, $26, $26, $26, $26, $26, $27, $27, $27, $27, $27, $27 // E0-EF
.byte $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27, $27 // F0-FF

frequencyToBarLo:
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 // 00-0F
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 // 10-1F
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 // 20-2F
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 // 30-3F
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $01 // 40-4F
.byte $01, $01, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02, $02, $02 // 50-5F
.byte $02, $02, $02, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03 // 60-6F
.byte $03, $03, $03, $03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04 // 70-7F
.byte $04, $04, $04, $04, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05 // 80-8F
.byte $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $05, $06, $06, $06, $06 // 90-9F
.byte $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06, $06 // A0-AF
.byte $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07 // B0-BF
.byte $07, $07, $07, $07, $07, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08 // C0-CF
.byte $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08 // D0-DF
.byte $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $09, $09, $09, $09, $09, $09 // E0-EF
.byte $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09, $09 // F0-FF

//; Envelope conversions

.var SUSTAINBOOST = 8
sustainToHeight:			.fill 16, ((i + SUSTAINBOOST) * MAX_BAR_HEIGHT) / (16 - 1 + SUSTAINBOOST)

releaseRateLo:				.byte <((MAX_BAR_HEIGHT * 256.0 / 1) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 2) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 3) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 4) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 6) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 9) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 11) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 12) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 15) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 38) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 75) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 120) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 150) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 450) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 750) + 64)
							.byte <((MAX_BAR_HEIGHT * 256.0 / 1200) + 64)

releaseRateHi:				.byte >((MAX_BAR_HEIGHT * 256.0 / 1) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 2) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 3) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 4) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 6) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 9) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 11) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 12) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 15) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 38) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 75) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 120) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 150) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 450) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 750) + 64)
							.byte >((MAX_BAR_HEIGHT * 256.0 / 1200) + 64)

